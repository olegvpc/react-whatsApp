{"version":3,"file":"static/js/421.6cccaee5.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Chat/Chat.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import \"./Chat.css\";\n// import { Avatar, IconButton } from \"@material-ui/core\";\n// import {\n//   AttachFile,\n//   SearchOutlined,\n//   MoreVert,\n//   // InsertEmoticonIcon,\n// } from \"@material-ui/icons\";\n// import MoodIcon from \"@material-ui/icons/Mood\";\n// import MicNoneIcon from \"@material-ui/icons/MicNone\";\nimport React, { useState, useEffect } from \"react\";\nimport useFormAndValidation from '../../hooks/useFormAndValidation';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\n\nfunction Chat({\n  roomContact,\n  roomMessages,\n  sendMessage,\n}) {\n  // eslint-disable-next-line\n  const {values, errors, isValid, handleChange, setValues, setIsValid} = useFormAndValidation();\n  const currentUser = React.useContext(CurrentUserContext);\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  // console.count('RENDER Chat-component')\n  useEffect(()=>{\n    setRoomName(roomContact);\n    setMessages(roomMessages);\n    \n    // console.log(roomMessages);\n    // eslint-disable-next-line\n  }, [roomContact, JSON.stringify(roomMessages)])\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(\"click SEND\", values.message)\n    if(values.message){\n      const response = sendMessage(roomName.chatId, values.message);\n      const newMessage =  {\n        \"type\": \"outgoing\",\n        \"idMessage\": response.idMessage,\n        \"timestamp\": new Date().toString(),\n        \"typeMessage\": \"textMessage\",\n        \"chatId\": \"79037202775@c.us\",\n        \"textMessage\": values.message,\n        \"statusMessage\": \"read\",\n        \"sendByApi\": true\n    };\n      setMessages(prev => [newMessage, ...prev]);\n      // console.log(messages)\n\n    }\n    setValues('')\n\n    // console.log(values.IdInstance, values.ApiTokenInstance)\n  }\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat_header\">\n        <div className=\"chat_header_icon-avatar-container\">\n           <img className=\"chat_header_icon-avatar\" src={roomName?.avatar} alt=\"Avatar roomMeeting\" />\n        </div>\n       \n\n        <div className=\"chat_headerInfo\">\n          <h3>{roomName?.name}</h3>\n          <p>\n            last seen at: {\" \"}\n            {/* {new Date(messages[messages.length - 1]?.timestamp).getHours().toString()}:{new Date(messages[messages.length - 1]?.timestamp).getMinutes().toString()\n            } */}\n          </p>\n        </div>\n\n        <div className=\"chat_headerRight\">\n          <button className=\"chat_header_icon chat_header_icon-search\" />\n          <button className=\"chat_header_icon chat_header_icon-clip\" />\n          <button className=\"chat_header_icon chat_header_icon-dots\" />\n\n        </div>\n      </div>\n      {/* chat body */}\n      <div className=\"chat_body\">\n        {/* {messages[0]?.textMessage} */}\n        {messages?.map((message) => (\n          <p\n            key={message.idMessage}\n            className={`chat_message ${\n              ! message?.senderName ? \"chat_reciever\" : ''\n              // 'chat_reciever'\n            }`}\n          >\n            <span className=\"chat_name\">{message?.senderName ? message?.senderName : currentUser?.name}</span>\n            {(message?.typeMessage === \"textMessage\" || message?.typeMessage === \"extendedTextMessage\") ? message?.textMessage : 'Отправлена фото'}\n            <span className=\"chat_timestamp\">\n              {/* {new Date(message.timestamp?.toDate()).toUTCString()} */}\n              {new Date(message?.timestamp).getHours().toString()}:{new Date(message?.timestamp).getMinutes().toString()}\n            </span>\n          </p>\n        ))}\n      </div>\n\n      {/* chat footer */}\n      <div className=\"chat_footer\">\n        <button className=\"chat_header_icon chat_header_icon-face\"/>\n        <form \n        // onSubmit={handleSubmit}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Type a message\"\n            name='message'\n            value={values?.message || ''}\n            onChange={handleChange}\n            minLength='1'\n            maxLength='100'\n            disabled={! roomName?.chatId}\n          />\n          <button type=\"submit\" \n          onClick={handleSubmit}\n          >\n            Send\n          </button>\n        </form>\n       <button className=\"chat_header_icon chat_header_icon-mic\"/>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","_ref","roomContact","roomMessages","sendMessage","_useFormAndValidation","useFormAndValidation","values","handleChange","errors","isValid","setValues","currentUser","setIsValid","React","CurrentUserContext","_useState","useState","_useState2","_slicedToArray","roomName","setRoomName","_useState3","_useState4","messages","setMessages","useEffect","JSON","stringify","_jsxs","className","children","_jsx","src","avatar","alt","name","map","message","concat","senderName","typeMessage","textMessage","Date","timestamp","getHours","toString","getMinutes","idMessage","type","placeholder","value","onChange","minLength","maxLength","disabled","chatId","onClick","e","preventDefault","newMessage","prev"],"sourceRoot":""}